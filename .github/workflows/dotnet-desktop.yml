name: Production - OcrInspector

permissions:
  contents: write
  
on:
  push:
    branches:
      - main

env:
  artifactStagingDirectory: ${{ github.workspace }}/artifact_staging
  artifactType: 'Production'
  binariesDirectory: ${{ github.workspace }}/binaries
  buildConfiguration: 'Release'
  buildPlatform: 'any cpu'
  projectName: OcrInspector
  
defaults:
  run:
    working-directory: src

jobs:
  new-version:
    name: Get Version
    runs-on: windows-latest

    outputs:
      buildVersion: ${{ steps.parse-version.outputs.version }}
      validVersion: ${{ steps.validate-version.outputs.valid }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Parse Build Version for GitHub Tag
      id: parse-version
      shell: pwsh
      run: echo "version=$(Get-Date -UFormat '%Y.%m.%d').${{ github.run_number }}" >> $env:GITHUB_OUTPUT

    - name: Validate Version ${{ steps.parse-version.outputs.version }}
      id: validate-version
      shell: pwsh
      run: |
        $version = "${{ steps.parse-version.outputs.version }}"
        echo "valid=$($version -match '^\d+(\.\d+){3}$')" >> $env:GITHUB_OUTPUT
      
  build:
    name: Build and Publish - Version ${{ needs.new-version.outputs.buildVersion }}
    runs-on: windows-latest
    needs: new-version
    if: ${{ needs.new-version.result == 'success' && needs.new-version.outputs.validVersion == 'True' }}

    outputs:
      buildVersion: ${{ needs.new-version.outputs.buildVersion }}
      
    env:
      buildVersion: ${{ needs.new-version.outputs.buildVersion }}
      validVersion: ${{ needs.new-version.outputs.validVersion }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 8

    - name: Restore Packages
      shell: pwsh
      run: dotnet restore

    - name: Publish
      shell: pwsh
      run: dotnet publish -c Release --self-contained -r win-x64

    - name: Create Build Artifact
      shell: pwsh
      run: |
        New-Item -Path "${{ env.artifactStagingDirectory }}" -ItemType Directory
        Compress-Archive `
            -Path OcrInspector/bin/Release/net8.0-windows/win-x64./publish/* `
            -DestinationPath ${{ env.artifactStagingDirectory }}/${{ env.projectName }}.${{ env.buildVersion }}-win-x64.zip 

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: drop
        path: ${{ env.artifactStagingDirectory }}/*.zip

  create-release:
    name: Create GitHub Release & Tag - Version ${{ needs.build.outputs.buildVersion }}
    runs-on: windows-latest
    needs: build
    if: success()

    env:
      buildVersion: ${{ needs.build.outputs.buildVersion }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Download Build Artifacts
      uses: actions/download-artifact@v4.1.7
      with:
        name: drop

    - name: Create GitHub Release & Tag - v${{ env.buildVersion }}
      uses: softprops/action-gh-release@v1
      with:
        files: ./${{ env.projectName }}.${{ env.buildVersion }}-win-x64.zip
        tag_name: v${{ env.buildVersion }}
        name: ${{ env.artifactType }} v${{ env.buildVersion }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
