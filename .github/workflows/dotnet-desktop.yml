name: OcrInspector Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Publish
    runs-on: windows-latest

    env:
      buildPlatform: 'any cpu'
      buildConfiguration: 'Release'
      artifactStagingDirectory: ${{ github.workspace }}/artifact_staging
      binariesDirectory: ${{ github.workspace }}/binaries

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 8

    - name: Install NuGet Tools
      uses: NuGet/setup-nuget@v1

    - name: Restore Packages
      run: |
        echo %cd%
        cd ocr-inspector/src
        nuget restore '**/*.sln'

    - name: Build Solution
      run: msbuild /t:publish /p:Configuration=Release /p:DeployOnBuild=true /p:PublishDir=${{ env.binariesDirectory }} '**/*.sln'

    - name: Create Build Artifact
      run: |
        mkdir -p ${{ env.artifactStagingDirectory }}
        cd $(Build.BinariesDirectory)
        zip -r ${{ env.artifactStagingDirectory }}/${{ github.run_number }}-win-x64.zip .

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: ${{ env.artifactStagingDirectory }}/${{ github.run_number }}-win-x64.zip

  create_release:
    name: Create GitHub Release & Tag
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Parse Build Version for GitHub Tag
      id: parse_version
      run: echo "::set-output name=buildVersion::$(echo ${{ github.run_number }} | grep -oP '\d+(.\d+)?')"

    - name: Download Build Artifacts
      uses: actions/download-artifact@v2
      with:
        name: drop

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: drop/*
        tag_name: v${{ steps.parse_version.outputs.buildVersion }}
        release_name: Production v${{ steps.parse_version.outputs.buildVersion }}
        body: "Release notes here"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
