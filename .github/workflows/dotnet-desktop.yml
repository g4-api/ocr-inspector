name: OcrInspector Build and Publish

on:
  push:
    branches:
      - main
      
defaults:
  run:
    working-directory: src

jobs:
  build:
    name: Build and Publish
    runs-on: windows-latest

    env:
      buildPlatform: 'any cpu'
      buildConfiguration: 'Release'
      artifactStagingDirectory: ${{ github.workspace }}/artifact_staging
      binariesDirectory: ${{ github.workspace }}/binaries
      projectName: OcrInspector

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 8

    - name: Restore Packages
      run:  dotnet restore

    - name: Publish
      run:  dotnet publish -c Release --self-contained -r win-x64

    - name: Create Build Artifact
      run: |
        New-Item -Path "${{ env.artifactStagingDirectory }}" -ItemType Directory
        Compress-Archive `
            -Path OcrInspector/bin/Release/net8.0-windows/win-x64./publish/* `
            -DestinationPath ${{ env.artifactStagingDirectory }}/${{ github.run_number }}-win-x64.zip

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: ${{ env.artifactStagingDirectory }}/${{ github.run_number }}-win-x64.zip

  create_release:
    name: Create GitHub Release & Tag
    runs-on: windows-latest
    needs: build
    if: success()

    steps:
    - name: Parse Build Version for GitHub Tag
      id: parse_version
      run: echo "::set-output name=buildVersion::$(Get-Date -Format 'yyyy.MM.dd')"

    - name: Download Build Artifacts
      uses: actions/download-artifact@v2
      with:
        name: drop

    - name: Check Version
      run: echo 'Production v${{ steps.parse_version.outputs.buildVersion }}.${{ github.run_number }}'

    # - name: Create GitHub Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: drop/*
    #     tag_name: v${{ steps.parse_version.outputs.buildVersion }}
    #     release_name: Production v${{ steps.parse_version.outputs.buildVersion }}
    #     body: "Release notes here"
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
